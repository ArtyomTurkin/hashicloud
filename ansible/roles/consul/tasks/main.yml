---
- name: Get current version
  command: consul --version | grep '^Consul' | sed -e 's/Consul\sv//'
  register: c_installed_version
  changed_when: false
  failed_when: c_installed_version.rc > 2

- debug:
    msg: "Consul installed version: {{ c_installed_version.stdout }}"
  when: c_installed_version.stdout is defined

- name: Set installed_version
  set_fact:
    installed_version: "{{ c_installed_version.stdout }}"
  when: c_installed_version.stdout is defined

- name: Set installed_version to 0
  set_fact:
    installed_version: "0"
  when: c_installed_version.stdout is undefined

- name: Download Consul binary
  unarchive: 
    src: "{{ consul_url }}"
    dest: "{{ consul_dir }}"
    remote_src: true
  when:
    - version not in installed_version
    - remote
  notify: Restart Consul

- name: Copy Consul binary from local
  copy:
    src: "{{ consul_url }}"
    dest: "{{ consul_dir }}/consul"
  when:
    - version not in installed_version
    - not remote
  notify: Restart Consul

- name: Create Consul group
  group:
    name: consul
    state: present

- name: Create Consul user
  user:
    name: consul
    comment: User for Consul to run under
    groups: consul

- name: Create work folder
  file:
    path: /var/consul
    state: directory
    owner: consul

- name: Create config folder
  file:
    path: /etc/consul.d/config
    state: directory

- name: Create consul server config file
  template:
    src: server.config.j2
    dest: /etc/consul.d/config/config.json
  when:
    - inventory_hostname in servers
  notify: Restart Consul

- name: Create consul client config file
  template:
    src: client.config.j2
    dest: /etc/consul.d/config/config.json
  when:
    - inventory_hostname not in servers
  notify: Restart Consul

- name: Create consul service file
  template:
    src: consul.service.j2
    dest: /etc/systemd/system/consul.service
  notify: Restart Consul